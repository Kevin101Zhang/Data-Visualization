{"body":"Such Code. Much Framework. Wow. \n\nOk so I really think there are beginning to become too many frameworks. What's going to end up happening is a lot of these are going to fall by the wayside in favor of more mature or more commonly used frameworks. (its easier to find someone who know jQuery than Sizzle (even though jQuery uses Sizzle :D) ) ","author":"jewdai","created_utc":"1421965515","score":"1","downs":"0","ups":"1"}
{"body":"[MDN]( https://developer.mozilla.org/en-US/docs/Web/API/EventTarget.removeEventListener) covers un-binding pretty thoroughly. There may be some convenience methods built into any libraries you may be using as well, e.g.  [jQuery](http://api.jquery.com/unbind/).\n\nPersonally I think that un-binding events is more important because that can improve performance. Unloading window properties may be more trouble than its worth...but I'm sure there are good reasons to do both which I'm not aware of.","author":"cazzer548","created_utc":"1421866359","score":"2","downs":"0","ups":"2"}
{"body":"It's fine for installing popular frameworks like jQuery, Angular, FontAwesome etc.\n\nWhen you get into smaller modules, persistence, recursive or deep dependency trees, versioning, automated bundling and tooling, etc. then bower is not a strong choice. Some [more info here](https://github.com/bionode/bionode/issues/9#issuecomment-49566087).\n\nBower users seem to rarely upholds standards (like semantic versioning and accurate bower.json metadata) so it's no real wonder most bower packages do not have a dependency depth greater than 1. ","author":"mattdesl","created_utc":"1421436633","score":"2","downs":"0","ups":"2"}
{"body":"http://mustache.github.io/\nIt is a neat, simple one. You can use it. Works pretty good with jQuery.","author":"_riteshpandey","created_utc":"1420272258","score":"2","downs":"0","ups":"2"}
{"body":"For vanilla and jQuery-ful javascript, we've settled on [qUnit.js](http://qunitjs.com/) for testing. It took our test engineer ~ 3 days to get it set up and comfortable enough to have test templates set up for a few of our projects. \n\n[This post on StackExchange](http://stackoverflow.com/questions/300855/javascript-unit-test-tools-for-tdd) has had a ton of traffic; the top answer has 840 votes as of now. Last updated a month ago, \n\n - [Karma](http://karma-runner.github.io/0.12/index.html) and \n - [Buster.js](http://docs.busterjs.org/en/latest/) \n\nare the two Node-centric platforms they call out. I've used neither, but I'd comfortably fall back on the collective wisdom of the nerd power on that post. ","author":"herrmatt","created_utc":"1421840317","score":"2","downs":"0","ups":"2"}
{"body":"its this one from the jquery official site\n\nhttp://jqueryui.com/slider/#range\n\nif i could lock the pointer onto the handle while it was dragging then mouse up wouldn't be a problem","author":"jangojangojip","created_utc":"1422531975","score":"1","downs":"0","ups":"1"}
{"body":"Phew, good thing angular and jQuery are interchangeable or they'd be in some trouble!","author":"fetch_me_a_block","created_utc":"1420499360","score":"5","downs":"0","ups":"5"}
{"body":"This title is just begging for snark.\n\n^Not ^from ^me ^though, \n\n^^I ^^use ^^jQuery ^^sometimes.","author":"cjwelborn","created_utc":"1420947557","score":"1","downs":"0","ups":"1"}
{"body":"Things are working today and it was indeed MSFT ajax cdn which now returns correctly:\n\ncurl 'http://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.5.1.min.js' -H 'Accept: */*' -H 'Referer: http://support2.microsoft.com/kb/2881688' -H 'User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/40.0.2214.91 Safari/537.36' --compressed\n/*!\n * jQuery JavaScript Library v1.5.1\n * http://jquery.com/\n *\n * Copyright 2011, John Resig\n * Dual licensed under the MIT or GPL Version 2 licenses.\n * http://jquery.org/license\n *\n * Includes Sizzle.js\n * http://sizzlejs.com/\n * Copyright 2011, The Dojo Foundation\n * Released under the MIT, BSD, and GPL Licenses.\n *\n * Date: Wed Feb 23 13:55:29 2011 -0500\n */\n(function(a,b){function cg(a){return d.isWindow(a).....","author":"richardaustin","created_utc":"1422292266","score":"1","downs":"0","ups":"1"}
{"body":"Yes, these guys are generally assumed to have no programming experience. I agree that dropping jQuery and the like probably makes sense or at very least, moving it to the end. \n\nI plan on including discussion about scope as part of the functions sessions and I'll probably touch upon it while covering variables, too. I'll make sure to cover DOM methods and probably only cover OOP if someone asks.\n\nThanks for the feedback!","author":"rhlowe","created_utc":"1421939074","score":"1","downs":"0","ups":"1"}
{"body":"Ever heard of AJAX? JQuery is valuable.","author":"Casual_0bserver","created_utc":"1421341693","score":"3","downs":"0","ups":"3"}
{"body":"I don't quite follow. To use jQuery, you need the jQuery javascript files. These may or may not be minified files. Most people use minified files to save bandwidth, e.g. \"jquery.min.js\". If you want to add static typing you need to add type definition files. You can download these from \"DefinitelyTyped\". Alternatively you can use a TypeScript definition file downloader (TSD).\n\nThe TypeScript compiler merely needs the definition files to do the type checking.\n\njQuery can be downloaded either manually or using a tool. This tool may be npm or bower, for example.","author":"nawitus","created_utc":"1421455967","score":"1","downs":"0","ups":"1"}
{"body":"`$('#search').on('....` on ly searches the DOM once when the event is bound when the browser sees this code. Getting the value in the filter method from `$('#filter').val()` will search the DOM every time the filter method is being run. \n\n`$(this)` is cheaper than a selector, as it doesn't search the DOM, but only makes a regular element into a jQuery element, so it is easier to use the utility methods like `.val()` and such.\n\nAs an aside, the `#id` selector is pretty fast, but it would be best to not make the `filter` responsible for anything other than filtering the results, it doesn't need to know where the search string comes from.","author":"bobslaede","created_utc":"1420798914","score":"2","downs":"0","ups":"2"}
{"body":"jQuery is a *client* side technology. It is designed to change the way a web page looks by manipulating the DOM, or if you like, the 'View'.   \nThe frameworks you list are all *server* side. They have different approaches to what gets sent from the server to the client.   \n   \nThere really is very little to no overlap.   \n    \nBy analogy:    \nQ: I have two choices in which car I drive to work - my Prius or my Honda Odyssey. Should I take the I-87 to work, or the I-95?   \nA: The road you take *might* affect which car you drive, I suppose. But on the whole it does not. Any regular road can take either of those two cars. You would choose which road you took based on some other factor - probably traffic, or trip time.   \n     \nRemember I'm ELI5 here. YMMV.","author":"Evanescent_contrail","created_utc":"1420579870","score":"1","downs":"0","ups":"1"}
{"body":"Because it probably doesn't need to be a jQuery plugin. You probably don't need jQuery. \n\n\nThe current climate in the JS is that of modules with as few and as small as possible dependencies. Monolithic libs are becoming less popular with growth of npm, bower (not so much anymore), jspm and tools like browserify, webpack, requirejs, etc.\n\n\nIf you want a larger audience, ditch the (probably) unnecessary jQuery dependency.","author":"LookWordsEverywhere","created_utc":"1420796469","score":"7","downs":"0","ups":"7"}
{"body":"I think there's this perception that writing a jQuery plugin is some sort of rite of passage of beginner/journeyman level programmers.  jQuery plugins sometimes have a reputation for not always being the highest quality code, and for being the domain of people that are oblivious to the fact that life exists outside of jQuery.  There's this common refrain of, \"well that sounds interesting, but why in the world must it be a jQuery plugin?\" with the implication being that people don't want to be forced to use jQuery just to be able to use this functionality.  I think people are also rather exasperated with the vast amount of blogspam floating around the web development world that comes in the form of, \"50 jQuery plugins that you absolutely must check out!\" where most of them are just rather *meh*, or they are for things that are more style than substance and in questionable taste.  And finally, I think a lot of people have suffered from plugins that were considered one-offs by their authors, where someone banged out some barely working code and posted it in some plugin directory and then forgot all about it, leaving it in an unmaintained state of bitrot where it might not work correctly with the current version of jQuery or it might have other bugs or deficiencies that were never addressed.\n\nNow, please recognize that I'm just summarizing the common perceptions.  I don't think you should necessarily put too much weight in them.  There are a lot of times when a plugin's functionality only makes sense in the context of jQuery, because doing it without jQuery would require a lot of reinvention of wheels.  And many jQuery plugins are very high quality and are written by people that know exactly what they are doing, and are actively maintained.  It's obviously a thriving community that adds a lot of value, so there's no reason to throw out the baby with the bathwater.\n","author":"Rhomboid","created_utc":"1420792189","score":"19","downs":"0","ups":"19"}
{"body":"Instead of the final example\n\n    jQuery.noConflict();\n    (function($) { \n      $(function() {\n       // by passing the $ you can code using the $ alias for jQuery\n       alert('Page: ' + $('title').html() + ' dom loaded!');\n      });\n    })(jQuery);\n\nyou could do\n\n    jQuery.noConflict();\n    jQuery(function($) {\n      // More code using $ as alias to jQuery\n    });","author":"jml26","created_utc":"1421749606","score":"1","downs":"0","ups":"1"}
{"body":"\u0026lt;Anjular\u0026gt; is the only web application framework and does all the things. Why worry about the future? Just wait until next year to tell your boss that they need to budget for a complete no-features rewrite. If he gives you any shit just ask him if all that boring business stuff is really more important than writing anodyne 'look how cool we are!' screeds on your generic WordPress '2014 theme' dev blog.\n\nWorst case scenario there will always be plenty of 'JAVASCRIPT/ANGULAR/JQUERY/BOOTSTRAP FASHION BRAND URGENT!!!!' jobs in your nearest urban centre.","author":"Bosola","created_utc":"1420745193","score":"1","downs":"0","ups":"1"}
{"body":"I'm using FF, yes. There is a whole lot more code, but the rest of it has never been a problem. The methods are the only things changed since the last working version (and an object where the values are new Url()s).\n\nCtrl + J opens the library, Ctrl + Shift + K opens the console, but there were no messages pertaining to my code (only one or two pertaining to the jQuery include file).\n\nEdit: I had my TV open on my 3rd monitor (it's a TV with a VGA hookup), so the console did open. There are no errors or warnings in JS, though. There's a repeating log, but it's not coming from my script.","author":"TechGeek01","created_utc":"1421879700","score":"1","downs":"0","ups":"1"}
{"body":"jQuery objects are ordered sets, and the only thing you can get from subclassing array that you can't right now (.length updates from setting non-existing index) is useless to jQuery objects anyway","author":"Esailija","created_utc":"1420602554","score":"1","downs":"0","ups":"1"}
{"body":"\u0026gt; Eventually I intend to merge the two into a combined solution where the focal point is pre-calculated using PHP, and the end cropping is handled by jQuery.\n\nYes, that's certainly the best option.","author":"asr","created_utc":"1420488795","score":"1","downs":"0","ups":"1"}
{"body":"Document. Document. Document.\n\nMy functions have documentation that says what arguments are expected and what type they should be. Other developers using my code need to read the docs else code at their own peril.\n\nGoing forward, my current company is adding this documentation (in jsdoc form) as a requirement in code reviews. Not having overview, params, defaults, returns, and side effects in the docs of any top-level function (top-level for the file) will definitely result in rejection. Any non-trivial nested functions also need param and return values as well (though we are moving to be more functional which tends to allow these to have more haskellish declarations).\n\nThis kind of programming has reduced quite a number of errors and (along with better unit testing) cuts down on the need for defensive coding.\n\nAnother change has been to move away from ambiguous parameter ordering and types. We try to minimize the number of functions that (for example) take either a string or an array or even worse, do something like jQuery where you can often input many different things in different orders with different effects. That reduces the number of function names to memorize, but adds the overhead of remembering which set of parameters in what order does what (and complicates the function code with lots of edge cases). ","author":"theQuandary","created_utc":"1420766806","score":"1","downs":"0","ups":"1"}
{"body":"hopefully I am understanding your criteria correctly...\n\nyou can add an event listener to the document element that detects every key pressed on the page. Every time a key is pressed, you can append it to a string. If the key pressed is enter, print out the array.\n\nusing jquery, it might look something like this:\n\n    \u0026lt;script\u0026gt;\n    var input = '';\n    \n    $(document).keydown(function(e){\n    \tvar key = (e.keyCode) ? e.keyCode : e.which;\n    \tif(key === 13){\n    \t\talert('you entered: '+input);\n    \t\tinput = '';\n    \t}\n    \telse\n    \t\tinput += string.fromCharCode(key);\n    });\n    \u0026lt;/script\u0026gt;\n\n","author":"jcchartrand","created_utc":"1421416791","score":"1","downs":"0","ups":"1"}
{"body":"I've been dangling my feet in the functional landscape for some time now and I love it.\n\nThough, I have to disagree about React being hefty... I've burnt out many small components for apps in React with no trouble at all.  Performance or otherwise.  In fact, I wrote up a simple (and incredibly small) crafting search utility for Starmade before Christmas (and added a small feature just last night in a matter of an hour.)  It's a standalone static HTML tool (because I converted the XML data to JSON and embedded it in the source).  It clocks in around 200 lines of code (not including the React library).  React clocks in just over the size of  jQuery minified, but I argue it's totally worth it for what it does!\n\nIt's not even medium difficulty because it has one feature (keyword search) but it was incredibly easy.  And I'd say pretty quick... 558 recipes, filter and search is pretty damn quick.  Clearing the filter if you get it down to one item gives a slight pause because it basically re-renders the whole page, but that's not even a second.  I just ran a profile on it, because I was curious.  Opened it up, started the profile, clicked an item, then another, then cleared the filter:\nhttp://i.imgur.com/bNNxCAq.png?1\n\nThe profile was sorted by method name.  The 62ms time was the longest execution and it was most likely the clear to re-render the whole list.\n\nOh, total memory usage (Chrome dev tools, timeline, memory enabled) is 15-23MB.\n\nhttp://starmadedock.net/threads/wip-craft-recipe-look-up-tool.4872/\n\nIt's minified there just to make it easy to download, but I'm preparing to put the source up as well.  Also, it currently doesn't use modules and all the components are in a single file (because there's two components and this started out as a \"just for me\" tool...)\n\nI also wrote the menu for http://worthingtonIndustries.com in React in little under a day (disclaimer: probably 3 total days with bugfixes/features added?)  It's not the best and it's using some outdated React functionality (namely treating components like functions) but it works for what they need and the project manager was a little leery about using something still in development so this was more of a \"test the waters\" sort of thing.","author":"nschubach","created_utc":"1420558216","score":"2","downs":"0","ups":"2"}
{"body":"I feel ya, I'm just starting to get good at Angular and now everyone's talking about React. Screw it, I'm gonna skip versions. Like Windows upgrades: XP -\u0026gt; 7 -\u0026gt; 10 is the way to go. I was great at jQuery, I skipped Backbone, now I'm on Angular. I'll skip React and consider what comes next (and I'm only half joking).","author":"lefnire","created_utc":"1422049831","score":"2","downs":"0","ups":"2"}
{"body":"A jQuery plugin that enables some of the \"directive\" functionality of AngularJS:\n\nhttps://github.com/mennovanslooten/jquery.directive.js\n\nThe plugin allows you (for example) to automatically run other jQuery plugins on elements that match a certain CSS class or HTML attribute. ","author":"menno","created_utc":"1420646168","score":"1","downs":"0","ups":"1"}
{"body":"I've taught Intro to JavaScript to beginners at Seattle Central College for about three years now. Here are some of the things I've learned:\n\n* Get people into jQuery as fast as possible. Teaching the raw DOM methods is a great way to frustrate your students and yourself, since A) the API is awful, and B) most people don't use it anyway.\n* Don't try to teach inheritance to beginners. They're not doing anything that requires understanding prototypes. You'll just confuse them.\n* Assume it's going to take them a lot longer to learn looping than you think it will. As a long-time programmer, I thought loops were simple, but it turns out that they're surprisingly hard for a lot of people, probably because they're the first time coders need to start thinking at multiple levels of abstraction.\n* Remember that for most people, if they haven't done browser scripting, do not think about the HTML document as a tree. They think of it as more like a Word document. You're going to need to spend some time talking about the DOM structure and CSS selectors.\n* You can start with console.log and prompt as a way to introduce basic syntax without having to get the DOM involved. That will get you through conditionals, loops, and possibly functions.\n\nMy usual weekly structure for the class goes something like this:\n\n1. Script tags, variables, console.log, prompt(), primitive types and operations. Homework: produce a basic page with inline and external scripts.\n2. Conditional statements, falsiness, comparison/boolean operators. Homework: write a choose-your-own-adventure.\n3. Arrays and loops. Homework: perform some kind of sum/average/max operation on an array that's provided.\n4. Objects, arrays of objects, and object loops. Homework: perform some analysis on an array of objects that describes Samuel L. Jackson's movie career.\n5. Basic jQuery selection and page manipulation. Homework: given a page of test cases, use jQuery to turn the tests green by manipulating the page.\n6. jQuery events and functions. Homework: write a simple tab menu implementation.\n\nBeyond this, we usually cover AJAX, a little bit of canvas, and cookies or local storage, depending on how much time is in the quarter. And this is actually a pretty aggressive schedule: I often get comments from students that they enjoy and appreciate my class, but the pace of it is much higher than they're used to.","author":"sombradesoledad","created_utc":"1421951569","score":"2","downs":"0","ups":"2"}
{"body":"As someone who interviews, anyone identifying as a Angular Dev or a jQuery Dev or a Ember Dev loses some traction with me. Not because of the library or framework, but because you short sell your skill set to a specific library.  Someone willing to pigeonhole themselves into one library is setting themselves up for failure.  Identify yourself by role and branch out.  Learn JavaScript, HTML, and CSS... Not some framework.  You should be selling yourself as a frontend dev if that's what you want to do.  You may not agree with it (I personally think the best devs are those with broad experience in both front and back end) but that's how the hiring works today.","author":"nschubach","created_utc":"1421927844","score":"8","downs":"0","ups":"8"}
{"body":"Not entirely sure jQuery will come to a stop for webapps just yet. I built these with jQuery, though I do agree we could use some data binding to really bring the code together:\n\nhttps://www.youtube.com/watch?v=dfQ1sOnCvHs\n\nhttps://www.youtube.com/watch?v=bYpOtAr1WiI\n\nThat drag-drop and zooming UI stuff is not done with jQuery UI, it's custom built for CSS 3D transforms like those provided by impress.js. These apps gracefully work offline too.\n\nThis one I built with pure Javascript, it ran on a Desktop, iPhone or iPad and could stream mp3's while driving around town:\n\nhttp://glassocean.net/nest/\n\nIt had scrobbling and supports Winamp playlists.","author":"hectavex","created_utc":"1422055074","score":"5","downs":"0","ups":"5"}
{"body":"npm doesn't lock you into commonJS. Browserify can use deamdify/shims/es6/etc. or you can pick another bundler like webpack, jspm, etc. \n\nNpm doesn't stand for \"node package manager.\" Many modules work in the browser (including those requiring system libs like \"crypto\", \"path\" and \"url\"). \n\nimo Bower is great for installing big, popular packages like jQuery, underscore, and Angular. But there is a reason most Bower packages don't have a dependency depth greater than 1. When you deal with persistence, smaller modules, deeper dependency trees, etc bower pretty much falls short. ","author":"mattdesl","created_utc":"1421934796","score":"5","downs":"0","ups":"5"}
{"body":"Wrote this while working on a project that required form uploads in IE9+. Every other library was either big, required jQuery, or didn't support everything we needed. It started as a fork of [toddmotto/atomic](https://github.com/toddmotto/atomic) but ended up getting an api change as well as the new features.\n\n\nAny feedback would be great.","author":"LookWordsEverywhere","created_utc":"1420860279","score":"1","downs":"0","ups":"1"}
{"body":"React has been in production for \u0026gt;2 years at one of the largest sites in the world, and if you're honestly, legitimately comparing it jquery you have no idea you're taking about.","author":"FuckTheReddits","created_utc":"1421303148","score":"1","downs":"0","ups":"1"}
{"body":"Agree, but it's far better than copy pasting your code into every page that needs it. ;)\n\nI've all but stopped using jQuery with React, but if you are going to be working on a jQuery project, plugins are an acceptable use case.  Although, the plugin should only be attached on pages that use it, so having a module system in place should only help matters.  There's no sense loading up a plugin that you aren't using on that page.","author":"nschubach","created_utc":"1420792286","score":"0","downs":"0","ups":"0"}
{"body":"Currently using jQuery. I'll check into the returned status code and see what I can come up with. Thanks for the suggestion.  \n  \nThe error code returned is coming as a status 200, the same as an accepted return. Not looking good.","author":"SJVellenga","created_utc":"1420159388","score":"1","downs":"0","ups":"1"}
{"body":"Thanks and that is a good point.\n\nI had used the YUI library before, but since Yahoo has discontinued their support I'm familiarizing myself with JQuery so they can include that in their pages","author":"westmontster","created_utc":"1421271099","score":"1","downs":"0","ups":"1"}
{"body":"React? http://facebook.github.io/react/\n\nAlso, nothing wrong with jQuery","author":"Davidsmp","created_utc":"1422034732","score":"2","downs":"0","ups":"2"}
{"body":"Bower is useful in the world of jquery-with-plugins and unmodified bootstrap stylesheets.\n\nBower is not useful in the world of SPAs and isomorphic code bases.\n\nAlso, bower doesn't \"solve\" anything. There's still (!) no blessed solution for turning your `bower_components` dumping yard into something you can actually use. Most tutorials out there just throw the entire `bower_components` folder into Apache's or nginx's web root and have you add script tags for every dependency. The other tutorials disagree on various ways to try and bundle that crap with various build tools while maintaining load order (which is part of what dependency management is meant to solve).\n\nIt's a mess. Just use npm.\n\nAnd don't get me started on \"asset dependencies\". Most of the popular boilerplates (bootstrap etc) are meant to be customized, not to have their CSS just dumped in your project. Unless you truly believe \"loading a ton of third-party CSS and then overriding everything\" is a valid strategy, these are practically useless on bower. And those that *are* meant to be used like that? Unless you don't give a fuck about design you likely don't want to use their defaults anyway.","author":"sigwhite","created_utc":"1421936063","score":"1","downs":"0","ups":"1"}
{"body":"Sure, I'll elaborate.\n\njQuery was created to abstract browser differences a long time ago, back when web standards were almost nonexistent. You couldn't rely on browsers to treat anything uniformly; jQuery was created to normalize that and abstract the differences away from the developer. jQuery was awesome!\n\nThese days, though, web standards, as well as browser javascript - they've become very uniform. We no longer have to support IE5, 6, and 7. We no longer have to support old versions of Firefox and Netscape. Web standards have come a long way, as has the DOM; browsers are becoming unified in the way they handle DOM manipulation. As such, jQuery has really become a superfluous layer, unless you're dealing with very old browsers. The jQuery team knows this; their new library drops support for older browsers, making the library much leaner (because calls are uniform across newer browsers).\n\njQueryUI is still pretty awesome, though.\n\nTL;DR: jQuery abstracts browser differences, but browsers have become pretty uniform and will only continue to do so.","author":"lunchmeat317","created_utc":"1422127529","score":"3","downs":"0","ups":"3"}
{"body":"The problem is that frameworks like Angular, libraries like jQuery, languages like JavaScript, platforms like Chrome, operating systems like Windows... they are just tools. They aren't the work. A carpenter isn't a hammer or saw user. A doctor isn't a scalpel user. An architect isn't an AutoCAD user. A photographer isn't a camera or Photoshop user.\n\nThe work is to fulfill goals. You have to learn what sort of goals you're good at fulfilling. I'm particularly good at making sense out of numbers. This turns out to be a wildly and widely applicable skill.\n\nAre you particularly good at figuring out how to arrange information so people can understand it more easily? That's called graphic design. Study that. Not Adobe Illustrator. Not Cocos2D. Not Objective-C.\n\nIf all you do is take inputs A and churn them through the framework du jour into outputs B as you're told to do, then you yourself are just a tool for someone else who is doing the real work, fulfilling the real goals. COBOL programmers are obsolete today not because they studied COBOL, but because that was all they studied. They let themselves become tools to the real people doing the real work and never became anything other than COBOL programmers. Some people are fine with that. I'm not.","author":"moron4hire","created_utc":"1422054446","score":"86","downs":"0","ups":"86"}
{"body":"sure but they're easier to find on gruntjs.com, and jquery is still useful for supporting older browsers","author":"tubbo","created_utc":"1422167423","score":"0","downs":"0","ups":"0"}
{"body":"I have to agree here. I was thinking it *may* be nice to key combos, then I read this simple solution http://stackoverflow.com/questions/10671822/jquery-handling-key-combinations.\n\nIt has A TON of stars on GitHub. I wonder what value people are getting out of it.","author":"AndrewJM","created_utc":"1420987787","score":"0","downs":"0","ups":"0"}
{"body":"I recently came across a job posting that, in short, looked like this:\n\nTitle: PHP Developer  \nRequired skills: HTML, CSS, jQuery, Photoshop  \nRequired education: Designer","author":"kuenx","created_utc":"1420498822","score":"15","downs":"0","ups":"15"}
{"body":"Until an app gets fairly complex, I usually just use a library that gives you some DOM/event utilities (jquery), underscore + some client-side template renderer (like handlebars.js). This can build 90% of most online web apps.\n\n\nHowever, I do understand the appeal of the aforementioned libraries, especially if you work with a lot of people. There is no real solution other than to bite the bullet and learn.\n\n\nI used to be a pure full-stack web developer, but in part due to some of the feelings you have, I studied computer science to broaden my skillset (it was also very fun and rewarding). Hope this helps.","author":"zallarak","created_utc":"1422064732","score":"2","downs":"0","ups":"2"}
{"body":"Thanks for explaining the jquery part. Didn't think that was intuitive at all... ","author":"ShumpEvenwood","created_utc":"1421192276","score":"2","downs":"0","ups":"2"}
{"body":"Thans alot, i do also feel a bit proud of the result!\nThe assignment of the project was to keep the comments this way. \nI might also start with my exam this week, and i'm looking forward doing it aswell, in jQuery! ;)","author":"Guzzy711","created_utc":"1422258210","score":"1","downs":"0","ups":"1"}
{"body":"Both of these are firing, the jQuery animation code is queuing them. \n\nie div#a AND #a are both correctly binding to your div here. if :visible and if :hidden aren't going to help, they are visible. \n\nuse a single binding and use slideToggle() if thats the behaviour you want (you dont specify what you want to do)","author":"tfforums","created_utc":"1422339714","score":"3","downs":"0","ups":"3"}
{"body":"Turns out I was talking about Bower, not Grunt. Derp.\n\nAnyway, I wasn't referring to the static definitions. In the case of JQuery, grabbing it with Bower gives you two directories; \"dist\" (which contains \"jquery.js\", \"jquery.min.js\" and \"jquery.map\") and \"src\", which contains module definitions for all of the individual JQuery functions. It's not really a major issue, other than effectively doubling the size of each dependency, but it makes my projects feel... Messy.","author":"Hipolipolopigus","created_utc":"1421456560","score":"1","downs":"0","ups":"1"}
{"body":"Also, I would prefer to not use Jquery if possible.","author":"nmorano1","created_utc":"1421519184","score":"1","downs":"0","ups":"1"}
{"body":"Been in production in one company, its hardly been put through its paces and even so 2 years is not a long run.  At 2 years you just start to find the maintainence problems a new technology imposes, and given its only at one place and they have vested interest we are not going to hear those problems.  Jquery and a template library can do anything that react can do but have a longer track record.","author":"stormcrowsx","created_utc":"1421303611","score":"1","downs":"0","ups":"1"}
{"body":"This is really awesome feedback! The sample homework is great too. \n\nIt's interesting that your experience runs counter to some of the other feedback I have seen regarding reliance on jQuery. I mean, I use it every day and hardly write plain javascript anymore, but it is helpful to at least know a bit of it too.","author":"rhlowe","created_utc":"1421952221","score":"1","downs":"0","ups":"1"}
{"body":"Why are those bad things?  Encapsulating DOM manipulation is a great idea. Managing mutability is a huge benefit. If you only manipulate DOM elements within your directive, as long as you traverse the link method's \"element\" parameter you can be sure you won't unintentionally modify other parts of the page (if they're following the same conventions).  If you need to coordinate multiple directives, that's exactly what the parent *controller* is for. \n\nAlso, you can call a jQuery function from about anywhere. Its a bad idea, and you'll probably create spaghetti by placing them in the \"wrong\" places, but Angular is still JS and the selectors and manipulators still work anywhere JS is being evaluated.  ","author":"evilduck","created_utc":"1421550235","score":"8","downs":"0","ups":"8"}
{"body":"forgot to include this, but we're using jquery/backbone/handlebars.  so utilizing any of the 3 (or any combo) would be ideal.\n\nI did discover that you can simply do a jQuery.html(markup).text() to get all HTML markup to be stripped out","author":"epicaricacy12","created_utc":"1421115924","score":"1","downs":"0","ups":"1"}
{"body":"I feel like most of the framework churn right now is due to the obsolescence of jQuery and the lack of a mature ecma6 framework. Its not unlike back in 2006-07 when jQuery was duking it out with Script.aculo.us Moo tools and YUI to see what would be the dominant framework.\n\nMy advice would be to help fix the problem. Find an open source library, learn its ins and out \u0026amp; work to improve it to work with ecma6 features. Even if your framework isn't the winner you will be a much better programmer in the end. In programming staying still with your programming knowledge is moving backwards. You need to be constantly learning to survive in this industry.","author":"faaace","created_utc":"1422059691","score":"6","downs":"0","ups":"6"}
{"body":"\u0026gt;My immediate reaction was \"that would make a great blog post\".\n\nI'd read it.  ..or an XKCD infographic -- what's the reddit trick to invoke Randall Munroe?\n\nThere are lots of factors at play here, and it would be really interesting to get data on which dominates.\n\nOne way to get a reasonable estimate would be to count programmers working in each area.  I'm certain there are far more people doing front end development than writing browsers.  However, my experience suggests front end programmers spend more time writing less code, due to the 'agile' churn.  (You don't get to sit down and crank out code, there's a lot more time looking up how to glue libraries or frameworks together and then debugging the result, and I'm not sure we're counting the HTML and CSS and resulting layout/asset efforts here.)\n\nAlso while the numbed of web apps is high, I suspect the lines of code in each is relatively small.  I know it's pretty routine for the framework and libraries to dwarf the web app in size, and I don't think it's fair to count the millions of copies of jQuery towards web app LoC!\n\nEDIT: Quick sniff test: todomvc's backbone variant has 12K LoC in the bower_components subdir, and only 368 lines of JS in the app itself.  It'll take 50,000 todomvc-sized apps to make one Chrome.","author":"bonafidebob","created_utc":"1421633668","score":"1","downs":"0","ups":"1"}
{"body":"Well the jQuery developers would like to do it but can't due to the limitations you've mentioned. See: https://github.com/jquery/jquery/issues/1754","author":"realityking89","created_utc":"1420644058","score":"1","downs":"0","ups":"1"}
{"body":"Damn, you're gettin' old. As am I. I remember layers, and CSS 1, and I remember building websites with framesets, and using preloads for mouseovers....remember how we used to put HTML comment tags inside `\u0026lt;script\u0026gt;` tags so that browsers that didn't support JS would ignore it? Sigh.\n\nI personally like the JS evolution. Some things go a little too fast, yeah, but I tend to adopt the things I think will really shine, or the things that already do. Grunt vs Gulp? I never adopted Grunt, but I took to Gulp immediately. Angular? The 1.x branch won't die for quite a while. jQuery - it was created for a purpose that is becoming unnecessary. Tech marches on.\n\nDon't change your stack every month, but don't discount the innovations that are out there. Like everything, the good ones will rise to the top, and the bad ones will disappear.","author":"lunchmeat317","created_utc":"1422065174","score":"7","downs":"0","ups":"7"}
{"body":"I've been into front-end development for more than 13 years now. I was there when you had to check if `document.all`existed to distinguish your browser, back when all this shit was called DHTML, back when `div` elements were also called _layers_... I've seen the evolution of front-end technologies and, honestly, the last 6 or 7 years have been **chaotic**. \n\nI honestly think that the front-end scene in general, and the JavaScript scene in particular has been saturated with hipsters that need to follow new trends every week. It's great to have evolution, but changing things for the sake of it is absurd. Are some things really that bad to ditch them, when we were using them a week ago? \n\nHey! Grunt is the devil, use gulp! Angular? The 1.x branch is dead! Use something else! Etc, etc, etc. There are so many examples out there, I'm sure you know some.\n\nI'm sorry, but I'm not going to change my entire stack every month just because some retarded hipster and his beard have decided, while hacking on his macbook on a Starbucks of San Francisco, that jQuery is bad or that we should design our CSS files using a smart-tv first design.\n\n","author":"omegote","created_utc":"1422056196","score":"45","downs":"0","ups":"45"}
{"body":"thanks for chiming into this thread! programming isn't something i pick up easily, but i am extremely encouraged by how helpful people in this field are to newcomers.\n\ni would love to know why you chose not to use jquery and what if anything you use in its place. as i have been reading up on this it seemed like jquery was a no-brainer if you wanted to do any kind of animations. i know these things are available in plain js but it just looked incredibly complex compared to how things can be implemented in jquery. other than animations, i'm not sure what i might want jquery for, as i can figure out how to do most of what i want in plain js.\n\ni would love to hear your reasoning behind this comment - why you avoid jquery and what type of stuff *would* you use it for?","author":"b_laww","created_utc":"1422030175","score":"1","downs":"0","ups":"1"}
{"body":"In 2015 there will new sexy frameworks and hundreds of blog posts entitled:\n\n*  \"Why $STARTUP stopped using Go and Angular and started using $NEW_FRAMEWORK\" (medium.com)\n* \"Why $NEW_FRAMEWORK is terrible\"\n* \"Why $NEW_FRAMEWORK isn't terrible\"\n* \"300 new frameworks YOU MUST USE!\"\n\nBloggers will beat themselves off with their adsense cheques, commenters will decry everything new and everyone else will just keep quietly working in jQuery.\n\nEdit: Also: \"hay guys, i know nothing about computers, how can i learn rails in a weekend and be rolling in cash by monday?\"","author":"halting_walrus","created_utc":"1420622704","score":"24","downs":"0","ups":"24"}
{"body":"Because most people have moved on to vanilla js modules and mvc frameworks. I found it weird when manning released the book \"Extending jQuery\" last year. It felt like it should have been released 2010 or so, not now when angular and react are all the shit.","author":"efwfew12323232323","created_utc":"1420797336","score":"0","downs":"0","ups":"0"}
{"body":"I definitely agree.. I know how to do just about anything I have ever needed to do using jQuery, but I couldn't do 99% of it with vanilla JS.","author":"palmermarc","created_utc":"1422055685","score":"0","downs":"0","ups":"0"}
{"body":"I think an understanding of who uses javascript outside of /r/angularjs is also being excluded from /u/efwfew12323232323 's logic.\n\nCertainly not right now, but over the next couple of years we will start to see a decline in monolithic frameworks like angular and react due to their [shameful modularity](http://swannodette.github.io/2015/01/06/the-false-promise-of-javascript-microlibs/). Of course, jQuery is guilty of this too. I look forward to seeing more great [feature pickers](http://getbootstrap.com/customize/) that would allow you to choose just exactly what you want from a framework instead of being lumped with the entire thing.\n\nFor everything else, there's [npm](http://npmjs.org) and a little elbow grease to put it all together.","author":"krazyjakee","created_utc":"1420822246","score":"1","downs":"0","ups":"1"}
{"body":"That sounds like a very sound approach. I guess I might make the app more modularized and have a modern approach to it (API, front-end framework, etc.) and legacy approach (server-rendered views, no API, jQuery to sprinkle some sugar).\n\nI'll take that into consideration. Thanks.","author":"antoninj","created_utc":"1421012671","score":"1","downs":"0","ups":"1"}
{"body":"\u0026gt; So many libraries\nDefinitely, as with every other hot topic in JavaScript, there is a bunch of libraries.\n\nCheckout [this thread](https://www.reddit.com/r/javascript/comments/1zflzt/get_the_stats_comparison_of_promises_libraries/) for a short comparison of libraries.\n\nWhen I like about [when](https://github.com/cujojs/when) is that it is really easy to use and thus easy to get started with. It has a lot of cool features like\n\n\u0026gt; It will assimilate such promises and make them behave like Promises/A+.\n\nThis is awesome, because it allows me to use *when* with other libraries in my project like [$.Deferred](http://api.jquery.com/category/deferred-object/).","author":"cygned","created_utc":"1422513704","score":"1","downs":"0","ups":"1"}
{"body":"npm is solid, but encourages a bit of a [different style](http://maxogden.com/nested-dependencies.html). For example, isolated modules and pure functions are preferred over singletons and plugin-based frameworks (e.g. jQuery). \n\nI still tend to use Bower for some non-code assets (like FontAwesome, normalize.css, etc). ","author":"mattdesl","created_utc":"1421378639","score":"2","downs":"0","ups":"2"}
{"body":"In my opinion, I can't see why you wouldn't  be able to to use certain libraries with x,y or z framework.  The javascript community has such a vast collection of quality libraries and you shouldn't feel restricted.\n\nI'm afraid I don't have much experience with knockout though. Personally, I feel Backbone (with require.js as already mentioned) provides the most flexible platform to build Js applications. And it's the only framework I can use without feeling dictated to. From what you described as your requirements I'm surprised it was dismissed. \n\nThat said, I often use backbone with libraries such as d3, jquery or highcharts. You shouldn't have an issue using most libs with knockout.","author":"ablearcher90","created_utc":"1421890544","score":"1","downs":"0","ups":"1"}
{"body":"\u0026gt; JavaScript developers are a dime a dozen\n\nI honestly get the impression that this isn't that true relative to the huge surge in demand in recent years. This is the reason why I'm trying to move from PHP to JS.\n\nAlso there's a difference between someone who's done the odd bit of jQuery and a full blown JS developer.\n","author":"rmbarnes","created_utc":"1420543382","score":"1","downs":"0","ups":"1"}
{"body":"The way I see it, jQuery plugins are designed to work *imperatively* rather than *declaratively*. The problem with that is that it means they don't play nice with JavaScript frameworks which bind data to the DOM. For example if I wanted to bind a list of \u0026lt;select\u0026gt; elements and then make them pretty using the Chosen jQuery plugin, I'd have to write a custom directive to run the .chosen() on each element every time one is created. Even worse is when you need to set up a million jQuery event listeners that then call your plugin because they run totally separately from the framework. I'm not really sure what the alternative is however... ","author":"TMiguelT","created_utc":"1420798708","score":"1","downs":"0","ups":"1"}
{"body":"The only encapsulation that jQuery provides is an object namespace, something you can do on your own with simply `var myNamespace = {};`.\n\nIf you need jQuery for that, then you're definitely using it for the wrong reasons.","author":"kenman","created_utc":"1420841041","score":"3","downs":"0","ups":"3"}
{"body":"It seems strange that this animation library would want people to learn it's own API which is simply a wrapper of the [CSS3 keyframes](http://www.w3schools.com/cssref/css3_pr_animation-keyframes.asp) API. If you spent the time to learn the actual standards, you could simply [generate those keyframes](https://github.com/jQueryKeyframes/jQuery.Keyframes) and then bind them with [events](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Using_CSS_transitions#Detecting_the_completion_of_a_transition).","author":"krazyjakee","created_utc":"1420238846","score":"1","downs":"0","ups":"1"}
{"body":"It's async reduce with no concurrency... a queued reduce or reduce queue, perhaps? I don't entirely understand the design, though.\n\nThe promises are really only for flow control, since you aren't accumulating the promises. If you were accumulating the success and failures, I would suggest $.when(), but you aren't rejecting the final if an async calls is rejected.\n\nYour _.reduce returns a promise, which you swap out for the output value with the last always, so you get the *feeling* of a reduce. Incidentally, you need to use .then(), and not .always() to change the promise output. As tested (pulled up the console on a site with jQuery 1.8.3, so YMMV), the reduce returns nothing.\n\nI still think a regular queue is easier to read (the following may not work, it's a thrown-together example):\n\n    var asyncQueue = (function(){\n        \n        function nextItem(inputQueue, callback, outputArray, defer) {\n            var current;\n            \n            if (inputQueue.length) {\n                \n                // Pull the first element off the inputQueue\n                current = inputQueue.shift();\n                \n                // Use the promise from the async command to trigger the callback\n                // Use the same promise to trigger the next queue element\n                externalAsyncCommand.then(function(data){\n                    // callback no longer take a promise, but the actual data.\n                    callback(current, data, outputArray);\n                }).always(function(){\n                    nextItem(inputQueue, callback, outputArray, defer);\n                });\n                \n            } else {\n                \n                // Queue is empty, resolve the promise and pass the data.\n                defer.resolve(output);\n            }\n        }\n        \n        function startQueue(inputQueue, callback, outputArray) {\n            var defer = $.Deferred();\n            \n            nextItem(inputQueue, callback, outputArray, defer);\n            \n            return defer.promise();\n        }\n        \n        return startQueue;\n    }());","author":"oculus42","created_utc":"1421892415","score":"2","downs":"0","ups":"2"}
{"body":"I just stepped into a project that is using react, angular, backbone, jquery, underscore, and lowdash. To top it off there is a mix of coffee and vanilla. How the hell does that shit happen? It's been a nightmare to sort through, and I'm scrapping the entire front end.","author":"worldDev","created_utc":"1420163263","score":"3","downs":"0","ups":"3"}
{"body":"If you don't have 5 years of Angular experience, jQuery is pretty much the same thing anyway","author":"prophetjohn","created_utc":"1420506193","score":"2","downs":"0","ups":"2"}
{"body":"Backend-dev indeed. I'm guessing NodeJS will be around for a while, though its node-modules might change a bit every now and then.\n\nStill, Shadow-DOM is too premature at the moment. Little support on devices and hard to get into (not many video's or forum topics about that yet).\n\nI feel jQuery will come to a stop soon (if you are going to work on webapps at least, for normal websites it might stick around for a while as its a simple solution that doesn't depend on any backend and has a clear goal: improve and/or ease DOM manipulations).\n\nAngularJS might stick around but 2.x will be very different and i don't see any major platform taking over any time soon.\n\nIf you really want to stick with a single topic: people will always gonna need designers. Sure its a very different cup of tea, but is less likely to be replaced, the tools are solid for years and its hard to outsource (as it requires a lot of interaction with the clients and users).","author":"Martinspire","created_utc":"1422050733","score":"5","downs":"0","ups":"5"}
{"body":"If you rely a lot on Bootstrap and plugin-centric frameworks (jQuery, ThreeJS, Angular, etc) you might find it hard to switch entirely to npm. \n\nOtherwise I haven't noticed much of a problem.","author":"mattdesl","created_utc":"1420485588","score":"2","downs":"0","ups":"2"}
{"body":"Yeah thats pretty much it. As long as you are comfortable using jQuery ;P","author":"gdmno","created_utc":"1421797295","score":"1","downs":"0","ups":"1"}
{"body":"\"request handling\" is a server-side term. and if you're saying \"i need to use JS to handle a put request\", than it makes sense that you'll use \"JS on server side\". you have no other option but node.\n\nif you're saying that JS will \"issue the request\", i'd recommend using angular.js. not just for it's $http service, also for it's other features like data-binding and routing. jQuery is also capable of issuing PUT request, but not DELETE as angular could.\n\nif you're going to utilize .net on server side, then you should check this : http://stackoverflow.com/questions/11155528/asp-net-handle-put-delete-verbs\n\nand lastly, if you'll go node way, be aware of method overriding. http://stackoverflow.com/questions/8378338/what-does-connect-js-methodoverride-do\n","author":"screamshot","created_utc":"1420709065","score":"1","downs":"0","ups":"1"}
{"body":"Unless you're willing to just say `MainObject.property3 = \"value3\";` in the second .js, you can always use `$.extend(MainObject, {property3: \"value3\"})` where [$.extend()](http://api.jquery.com/jquery.extend/) is from jquery.  Or you can [write your own version](http://gomakethings.com/vanilla-javascript-version-of-jquery-extend/) of extend.","author":"more_exercise","created_utc":"1422497844","score":"2","downs":"0","ups":"2"}
{"body":"http://jsfiddle.net/1c9L52x3/1/\n\nIn the fiddle (at least) you were missing jQuery (JSFiddle options on the left). I added some paragraphs so that it actually has scroll, removed a loose `\u0026lt;/a\u0026gt;` and made the JS execute onDomReady (JSFiddle options on the left). Of course you probably want to [make `.logo` sticky](http://jsfiddle.net/1c9L52x3/2/). And probably also [make `.large-logo` come back](http://jsfiddle.net/1c9L52x3/3/) when we scroll up.","author":"g3bj45hg34857","created_utc":"1422731021","score":"2","downs":"0","ups":"2"}
{"body":"No. They are a fine way to encapsulate your code. If you are using jQuery already, why not?","author":"physics4life","created_utc":"1420789007","score":"-3","downs":"0","ups":"-3"}
{"body":"Just throwing this out there but you could do both. Write your code as a vanilla JS module, and then write a jquery plugin that wraps that module.","author":"inmatarian","created_utc":"1420813630","score":"1","downs":"0","ups":"1"}
{"body":"React has a component life cycle.  If you want to modify something after it's rendered, you put that code in the componentDidMount method of the component.  You can get the DOM element from React using this.getDOMElement() and modify it how you want.  It's hard to say what libraries you are talking about since jQuery is pretty much deprecated with React, if you had something that made a carousel or something, I suppose you could init it in the componentDidMount, but you could also easily implement it in React to only render the current slide and have it render a new slide on demand to slide in.  You could also just use the library in question outside of React, but the next time React removes or changes the DOM, anything that other library did will be at risk.  Unless the elements are not removed since React doesn't touch what is not changed.\n\nAs far as doing special stuff... Not really(?). If you update the component data and call the render, React does a diff.  If you update the component state in React, it will automatically rerender and update what changed.  I sometimes do services this way.  I have a mixin that grabs data from the server and updates the component's state and React does the rest.  I just update data.","author":"mods_","created_utc":"1421618226","score":"3","downs":"0","ups":"3"}
{"body":"*Not* Derby, trust me. I was [involved](https://github.com/lefnire?tab=repositories) on the project, ran the only [auth module](https://github.com/lefnire/derby-auth) for a while (may be superseded). I built [HabitRPG](https://habitrpg.com) on Derby - was there for a year on the largest AWS instance I could afford (because the framework doesn't scale horizontally), restarting the server hourly due to framework memory leaks. I lost tens of thousands of users to the experience, and we finally migrated to Angular + Express, sputtering and gasping for breath. We actually celebrate the migration within HabitRPG as a \"holiday\" called [Derby Day](http://habitrpg.wikia.com/wiki/Derby_Day).\n\nHowever, Firebase \u0026amp; Meteor are platforms I'm very interested in. jQuery paid off well enough, was worth learning - though I'm seeing more and more frameworks weening off it. I actually think MV* platform knowledge will pay off well, as getting the basics there will transfer from one to the next. Take React - it's a modularized V in the stack, and coming from Angular the transition would be much smoother than starting from scratch. ","author":"lefnire","created_utc":"1422054999","score":"9","downs":"0","ups":"9"}
{"body":"As /u/Collinhead mentioned, right now the t variable is being shared across all elements -- this needs to be stored somewhere on a per-element basis.\n\nYou've got another problem though -- after a while you'll get an error `too much recursion`... also the element lookup is kind of slow and can be cached.... most of those parameters are actually static and won't change during each call so there's no need to pass them.\n\nAaaand also, like /u/J-Ro says, using `.animate` is a recipe for slowness... and actually, if you can avoid using jQuery altogether (i.e. data like /u/Collinhead used) it will be just that much faster... if you already have a css3 version it's already leaps and bounds over the fastest that this one can run.\n\nTake a look at this version: http://jsfiddle.net/an81t5rg/11/","author":"tswaters","created_utc":"1420362460","score":"1","downs":"0","ups":"1"}
{"body":"You almost have to use requireJS in order to use Knockout components (and I would stress to you that components are the only sane way to build a large knockout app). I would also recommend either Lodash or Ramda (if you are familiar with things like higher-order functions, closures, and curry/partial application).\n\nBluebird or WhenJS get my recommendation for promise libraries (WhenJS perhaps gets the edge because because it can lift jQuery \"promises\" while bluebird cannot -- as far as I know). Jasmine is my recommendation for unit testing. I recommend gulp for your build process.\n\nIf you want a full-blown framework, look up Durandal. That said, I still recommend you use React instead of Knockout/Durandal. Having used both quite a bit, I believe that React is superior in pretty much every way (ease of use, performance, data flow, etc).\n\nAs a final note, if you hate JS, then you are going to hate your life every time you code in it. Learn the language and it's design patterns (read the 'Eloquent Javascript' and 'Javascript Allonge' ebooks if you have not already). I disliked JS until I took the time to understand it. The JavaScript take on higher order functions and its use of prototypal inheritance makes for a good programming experience despite the warts.\n\nIf you love typed languages, there is a superset of JS called TypeScript that adds static typing. I'm not a fan, but if you love static typing then I think you'll enjoy working with it.","author":"theQuandary","created_utc":"1421885930","score":"1","downs":"0","ups":"1"}
{"body":"\u0026gt; JavaScript developers are a dime a dozen\n\nThat's true, but only about half of those developers actually know what they are doing.  \n\n\u0026gt; \"Hey, I used HTML \u0026amp; CSS with jQuery.  Therefore, I am JavaScript developer\"\n\n[JavaScript: The World's Most Misunderstood Programming Language](http://javascript.crockford.com/javascript.html)\n\n\u0026gt; \"Most of the people writing in JavaScript are not programmers. They lack the training and discipline to write good programs. JavaScript has so much expressive power that they are able to do useful things in it, anyway. This has given JavaScript a reputation of being strictly for the amateurs, that it is not suitable for professional programming. This is simply not the case.\"\n\n`- Crockford` ","author":"skitch920","created_utc":"1420508979","score":"3","downs":"0","ups":"3"}
{"body":"If only we could use jQuery to load jQuery.","author":"ChaseMoskal","created_utc":"1421426004","score":"1","downs":"0","ups":"1"}
{"body":"I do appreciate the convenience that jQuery offers though. I'm doing corporate intranet work (IE 8 and XP), so the additional loading time for jQuery doesn't seem to be such a big deal (since we load it from the corporate network). I only wish I were supporting only modern browsers.","author":"mariox19","created_utc":"1422134924","score":"1","downs":"0","ups":"1"}
{"body":"Its a game of roulette, taking over an existing codebase. Even if you are the smartest person on earth, it doesn't help you to peer into the madness of 20 other devs who had been working for 3 years or whatever not following the BKMs for an enterprise-level app. I would see it as a failure of management or the earlier lead devs, not the person taking over. Sometimes its not workable at all, sometimes its painfully workable, other times it can be smooth and easy if they cared about maintainence and testing. \n\nI think the architecture of angular is relatively straightforward; its all these external things mixed with it and the implementation details that get difficult since you start going out of the digest cycle. The fact that it has a bunch of jquery is concerning. I've found little to no use for it in angular apps + a tweening library. \n\nI guess just some general advice for refactoring would be to have all that dom manipulation in directives and not controllers at least, use services to communicate between controllers, directives, other parts of the app. If you want to make unit testing easier as you refactor, chop up form-like views into directives. here's a [presentation](http://slides.yearofmoo.com/ng-mtv-meetup-nov2014/index.html#/1/0/) about refactoring complex forms","author":"boompleetz","created_utc":"1420622838","score":"1","downs":"0","ups":"1"}
{"body":"OH, AND DO NOT GET INTO BROWSER COMPATIBILITY. CHROME ONLY. Again, you don't want to confuse things....if they stick with it, they'll learn that later on. It's just likely to turn off their interest this early on, and has no utility at that stage of learning. Absolutely zero point bringing it up.\n\nDon't do jQuery, either. That's totally the wrong way to learn JS. It's not \"easier\" in the circumstances, and I can elaborate on this if asked. Just use pure DOM API.","author":"aerovistae","created_utc":"1421291090","score":"2","downs":"0","ups":"2"}
{"body":"**Books:**\n\n- JavaScript: The Good Parts\n\n- JavaScript: The Definitive Guide\n\n**Online Resources:**\n\n[Mozilla Developer Network (MDN)](https://developer.mozilla.org/en-US/docs/Web/JavaScript)\n\n**Libraries**:\n\nToo numerous to really mention even a fraction, but some of bigger ones: \n\n- jQuery\n- Angular (MVC framework, alternatives are Ember and Knockout)\n- React (DOM manipulation/management)\n- NodeJS (server-side JS)\n\n**Management:** \n\n- NPM (Node Package Manager)\n- Bower/Grunt\n","author":"madman86","created_utc":"1422142550","score":"21","downs":"0","ups":"21"}
{"body":"If it's javascript then you can look at this: http://jqueryui.com/autocomplete/. If we're talking about an autocomplete function. ","author":"mrhamster","created_utc":"1420945415","score":"3","downs":"0","ups":"3"}
{"body":"Not bad advice. It could be [Meteor](https://www.meteor.com/) or [Derby](http://derbyjs.com/) coming up as the next fad, but then again it could be Angular 2.0 which means you're back in the same boat, with a different paddle.\n\nDid your jQuery knowledge pay off?","author":"hectavex","created_utc":"1422053736","score":"4","downs":"0","ups":"4"}
{"body":"I'm pretty sure he started writing the book in 2008 when jQuery was already popular. I think it's safe to say the author of jQuery knew JavaScript at that point.\n\nWhat kinds of errors are in the book? I haven't read it, I'm asking sincerely.","author":"xbudex","created_utc":"1422727564","score":"0","downs":"0","ups":"0"}
{"body":"\u0026gt; jQuery - it was created for a purpose that is becoming unnecessary.\n\nIf you have a minute or two, would you mind elaborating. I'm a little late to all of this, so I don't quite get what you're saying. jQuery abstracts away browser differences—isn't that still something that's needed. Are you thinking of something else? Thanks.","author":"mariox19","created_utc":"1422119580","score":"1","downs":"0","ups":"1"}
{"body":"Thanks, that makes sense :).\n\nObviously most jQuery-era DOM-changing libraries are obsoleted by Angular/React but that doesn't stop people from using them anyway :). But, from what you said, I'm guesing making something like jQuery-UI Draggable work with React is not really painless either, is it? (Assuming you allow changes to the contents once rendered and don't want such a change to reset your draggable state anyway.) But maybe easier than in angular because most of the time React doesn't change *everything*, I guess.\n\nI must say my understanding of state in React is rather ..incomplete, from what I gathered, you can use simple POJO's but then you have to trigger a render manually, or you can use ..state? and have React automatically rererender? But in such case, it's not `foo.bar = 5`, but `foo.set('bar', 5)`? Either way, it seems it's neither simpler nor more difficult than adding `$apply` (or `$timeout`)?\n\nI'm still interested in trying React out some day, it's just, that particular point in the article triggered my bullshit alarm and I had to check :).","author":"himdel","created_utc":"1421629179","score":"1","downs":"0","ups":"1"}
{"body":"I generally have no problem at all integrating jQuery plugins or jQuery UI components. Why did you \"virtually rewrite everything\"? Couldn't you have written a small wrapper that passes data or callbacks to the Angular system?","author":"me-at-work","created_utc":"1421600064","score":"3","downs":"0","ups":"3"}
{"body":"Your time is valuable and limited.  Don't learn anything new until someone is likely to pay you to do it.  Betting on a new framework is just gambling with your time.  With so many out there, the odds are that you pick wrong.  So stick with the tools you know until the writing on the wall becomes clear as to which platform/library/whatever is going to become the new standard.  I was slow to embrace jQuery, and now I'm slow to move off of it. Don't get me wrong, I'm keeping an eye on all the upcomers as well. But I'm not investing too much time or energy into them.\n\nLots of people here will tell you to just learn all the frameworks for the joy of learning frameworks and how great it is to just spend your whole life learning about how to do the exact same thing over and over again with slightly different syntax. I don't think they know how short life is.","author":"lobotomy42","created_utc":"1422078150","score":"9","downs":"0","ups":"9"}
{"body":"React is only the best to you because it hasn't had time for all of its flaws and maintaince problems to be obvious.   Angular felt amazing 2 years ago, now it feels beat up and unwieldy.  My small interactions with react make me think its not really any better than just using jquery, and jquery has a long proven history, react does not.","author":"stormcrowsx","created_utc":"1421302123","score":"2","downs":"0","ups":"2"}
{"body":"Are you able to use a framework like jQuery?","author":"krazyjakee","created_utc":"1420646363","score":"1","downs":"0","ups":"1"}